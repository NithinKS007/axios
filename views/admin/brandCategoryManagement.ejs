<%- include('../layouts/adminLayouts/header') %>
  <div class="screen-overlay"></div>
  <%- include('../layouts/adminLayouts/sidebar') %>
    <main class="main-wrap">
      <%- include('../layouts/adminLayouts/searchbar') %>

        <!-- Modal starts for category -->
        <div class="modal fade" id="exampleModalOne" tabindex="-1" aria-labelledby="exampleModalLabel"
          aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h1 class="modal-title fs-5 w-100 text-center" id="exampleModalLabel">Edit Category</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">

                <div class="mb-3">
                  <label for="categoryName" class="form-label">Change Name</label>
                  <input type="text" class="form-control" id="changeCName" name="categoryName" placeholder="" required>

                </div>
                <div class="mb-3">
                  <label for="categoryDescription" class="form-label">Change Description</label>
                  <textarea class="form-control" id="changeCDescription" name="categoryDescription" rows="3"
                    placeholder="" required></textarea>
                </div>


              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" id="saveChangesCategory" data-bs-dismiss="modal" class="btn btn-primary">Save
                  changes</button>

              </div>
            </div>
          </div>
        </div>
        <!-- Modal ends for category-->

        <!-- Modal starts for brand-->
        <div class="modal fade" id="exampleModalTwo" tabindex="-1" aria-labelledby="exampleModalLabel"
          aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h1 class="modal-title fs-5 w-100 text-center" id="exampleModalLabel">Edit Brand</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">

                <div class="mb-3">
                  <label for="brandName" class="form-label">Change Name</label>
                  <input type="text" class="form-control" id="changeBName" name=" brandName" placeholder="" required>

                </div>

              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" id="saveChangesBrand" data-bs-dismiss="modal" class="btn btn-primary">Save
                  changes</button>

              </div>
            </div>
          </div>
        </div>
        <!-- Modal ends for brand-->

        <section class="content-main">
          <div class="content-header">
            <div>
              <h2 class="content-title card-title">Categories </h2>
              <p>Dashboard > Category & Brand</p>
              <p>Add, edit or delete a category</p>
            </div>
            <div>
              <input type="text" placeholder="Search Categories" class="form-control bg-white">
            </div>
          </div>
          <div class="card">
            <div class="card-body">
              <div class="row">
                <div class="col-md-3">

                  <form action="/admin/brandCategoryManagement" method="post">
                    <div class="mb-4">
                      <label for="product_name" class="form-label">Name</label>
                      <input type="text" name="cName" placeholder="Type here" class="form-control" id="product_name" />
                    </div>
                    <div class="mb-4">
                      <label class="form-label">Description</label>
                      <textarea name="cDescription" placeholder="Type here" class="form-control"></textarea>
                    </div>
                    <div class="d-grid">
                      <button type="submit" class="btn btn-primary">Create category</button>
                    </div>
                  </form>


                </div>
                <div class="col-md-9">
                  <div class="table-responsive">
                    <table class="table table-hover">
                      <thead>
                        <tr>
                          <th class="text-center">
                            No
                          </th>
                          <th>ID</th>
                          <th>Name</th>
                          <th>Description</th>
                          <th class="text-center">Action</th>
                        </tr>
                      </thead>
                      <tbody id="categoriesTbody">

                        <%if(categoriesData.length>0){ %>
                          <% for(let i=0; i < categoriesData.length ; i++) {%>
                            <tr id="<%= categoriesData[i]._id %>">
                              <td class="text-center">
                                <%= [i +1] %>
                              </td>
                              <td>
                                <%= categoriesData[i]._id %>
                              </td>

                              <td id="displayChangedCname<%= categoriesData[i]._id %>">
                                <%= categoriesData[i].name %>
                              </td>
                              <td id="displayChangedCdescription<%= categoriesData[i]._id %>">
                                <%= categoriesData[i].description %>
                              </td>

                              <td class="text-end">
                                <div class="d-flex justify-content-end">

                                  <button type="button" data-category-name="<%= categoriesData[i].name %>"
                                    data-category-description="<%= categoriesData[i].description %>"
                                    data-category-id="<%= categoriesData[i]._id %>"
                                    class="btn btn-light rounded btn-sm font-sm flex-fill mx-1 editCategory"
                                    data-bs-toggle="modal" data-bs-target="#exampleModalOne">
                                    Edit info
                                  </button>

                                  <% if(categoriesData[i].isActive) { %>

                                    <button onclick="softDeleteCategory('<%= categoriesData[i]._id %>')"
                                      id="softDeleteButton<%= categoriesData[i]._id %>"
                                      class="btn btn-danger rounded btn-sm font-sm flex-fill mx-1">Unlist</button>

                                    <% } else { %>

                                      <button onclick="softDeleteCategory('<%= categoriesData[i]._id %>')"
                                        id="softDeleteButton<%= categoriesData[i]._id %>"
                                        class="btn btn-success rounded btn-sm font-sm flex-fill mx-1">List</button>

                                      <% } %>

                                </div>
                              </td>

                            </tr>
                            <%}%>
                              <%} else { %>
                                <tr>
                                <tr>
                                  <td colspan="5">No Categories Found </td>
                                </tr>
                                <%}%>
                      </tbody>
                    </table>
                  </div>
                </div> <!-- .col// -->
              </div> <!-- .row // -->
            </div> <!-- card body .// -->
          </div> <!-- card .// -->
          <div class="content-header">
            <div>
              <h2 class="content-title card-title">Brands </h2>
              <p>Add, edit or delete a brand</p>
            </div>
            <div>
              <input type="text" placeholder="Search Brands" class="form-control bg-white">
            </div>
          </div>
          <div class="card">
            <div class="card-body">
              <div class="row">
                <div class="col-md-3">

                  <form action="/admin/brandCategoryManagement" method="post">
                    <div class="mb-4">
                      <label for="product_name" class="form-label">Name</label>
                      <input type="text" name="bName" placeholder="Type here" class="form-control" id="product_name" />
                    </div>
                    <div class="d-grid">
                      <button type="submit" class="btn btn-primary">Create brand</button>
                    </div>
                  </form>


                </div>
                <div class="col-md-9">
                  <div class="table-responsive">
                    <table class="table table-hover">
                      <thead>
                        <tr>
                          <th class="text-center">
                            No
                          </th>
                          <th>ID</th>
                          <th>Name</th>
                          <th class="text-center">Action</th>
                        </tr>
                      </thead>
                      <tbody id="brandsTbody">

                        <%if(brandsData.length>0){ %>
                          <% for(let i=0; i < brandsData.length ; i++) {%>
                            <tr id="<%= brandsData[i]._id %>">
                              <td class="text-center">
                                <%= [i +1] %>
                              </td>
                              <td>
                                <%= brandsData[i]._id %>
                              </td>
                              <td id="displayChangedBname<%= brandsData[i]._id %>">
                                <%= brandsData[i].name %>
                              </td>
                              <td class="text-end">
                                <div class="d-flex justify-content-end">

                                  <button type="button" data-brand-name="<%= brandsData[i].name %>"
                                    data-brand-id="<%= brandsData[i]._id %>"
                                    class="btn btn-light rounded btn-sm font-sm flex-fill mx-1 editBrand"
                                    data-bs-toggle="modal" data-bs-target="#exampleModalTwo">
                                    Edit info
                                  </button>
                                  <% if(brandsData[i].isActive) { %>

                                    <button onclick="softDeleteBrand('<%=  brandsData[i]._id %>')"
                                      id="softDeleteButton<%=  brandsData[i]._id %>"
                                      class="btn btn-danger rounded btn-sm font-sm flex-fill mx-1">Unlist</button>

                                    <% } else { %>

                                      <button onclick="softDeleteBrand('<%=  brandsData[i]._id %>')"
                                        id="softDeleteButton<%=  brandsData[i]._id %>"
                                        class="btn btn-success rounded btn-sm font-sm flex-fill mx-1">List</button>

                                      <% } %>

                                </div>
                              </td>

                            </tr>
                            <%}%>
                              <%} else { %>
                                <tr>
                                <tr>
                                  <td colspan="5">No brands Found </td>
                                </tr>
                                <%}%>
                      </tbody>
                    </table>
                  </div>
                </div> <!-- .col// -->
              </div> <!-- .row // -->
            </div> <!-- card body .// -->
          </div> <!-- card .// -->
        </section> <!-- content-main end// -->

        <script>


          //soft deleting the categories

          const softDeleteCategory = (categoryId) => {

            const deleteButton = document.getElementById(`softDeleteButton${categoryId}`)
            const isDeleting = deleteButton.classList.contains('btn-danger')

            Swal.fire({
              title: `Are you sure you want to ${isDeleting ? 'delete' : 'undo deletion of'} this category?`,
              icon: "warning",
              showCancelButton: true,
              confirmButtonColor: "#3085d6",
              cancelButtonColor: "#d33",
              confirmButtonText: `Yes, ${isDeleting ? 'delete' : 'undo'} it!`
            }).then((result) => {

              if (result.isConfirmed) {

                fetch(`http://localhost:7000/admin/brandCategoryManagement/?categoryId=${categoryId}`, {

                  method: 'PATCH',
                  headers: {

                    'Content-Type': 'application/json'

                  },

                }).then(response => {

                  if (response.status !== 200) {

                    throw new Error('Network response was not ok')

                  }

                  return response.json()

                }).then(data => {

                  const deleteButton = document.getElementById(`softDeleteButton${categoryId}`)

                  if (data.categoryId.isActive) {

                    deleteButton.classList.remove('btn-danger')
                    deleteButton.classList.add('btn-success')
                    deleteButton.textContent = 'List'
                    Swal.fire({
                      title: "Deleted!",
                      text: "Successfully deleted category",
                      icon: "success"
                    })

                  } else {

                    deleteButton.classList.remove('btn-success')
                    deleteButton.classList.add('btn-danger')
                    deleteButton.textContent = 'Unlist'
                    Swal.fire({
                      title: "Retrieved!",
                      text: "Category has been retrieved.",
                      icon: "success"
                    })
                  }



                }).catch(error => {

                  console.log(`There is a problem with the fetch operation`, error)

                  Swal.fire({

                    title: "Error!",
                    text: "There was a problem deleting the category.",
                    icon: "error"

                  })

                })

              }

            })

          }


          //soft deleting brand

          const softDeleteBrand = (brandId) => {


            const deleteButton = document.getElementById(`softDeleteButton${brandId}`)
            const isDeleting = deleteButton.classList.contains('btn-danger')

            Swal.fire({
              title: `Are you sure you want to ${isDeleting ? 'delete' : 'undo deletion of'} this brand?`,
              icon: "warning",
              showCancelButton: true,
              confirmButtonColor: "#3085d6",
              cancelButtonColor: "#d33",
              confirmButtonText: `Yes, ${isDeleting ? 'delete' : 'undo'} it!`

            }).then((result) => {

              if (result.isConfirmed) {


                fetch(`http://localhost:7000/admin/brandCategoryManagement/?brandId=${brandId}`, {

                  method: 'PATCH',
                  headers: {

                    'Content-Type': 'application/json'
                  },

                }).then(response => {

                  if (response.status != 200) {

                    throw new Error('Network response was not ok')
                  }

                  return response.json()

                }).then(data => {


                  const deleteButton = document.getElementById(`softDeleteButton${brandId}`)

                  if (data.brandId.isActive) {

                    deleteButton.classList.remove('btn-danger');
                    deleteButton.classList.add('btn-success');
                    deleteButton.textContent = 'List'

                    Swal.fire({
                      title: "Deleted!",
                      text: "Successfully deleted Brand",
                      icon: "success"
                    })


                  } else {

                    deleteButton.classList.remove('btn-success');
                    deleteButton.classList.add('btn-danger');
                    deleteButton.textContent = 'Unlist'
                    Swal.fire({
                      title: "Retrieved!",
                      text: "Brand has been retrieved.",
                      icon: "success"
                    })

                  }

                }).catch(error => {

                  console.log(`There is a problem with the fetch operation`, error)
                  Swal.fire({

                    title: "Error!",
                    text: "There was a problem deleting the Brand.",
                    icon: "error"

                  })

                })

              }


            })

          }

          //for category editing 

          document.addEventListener("DOMContentLoaded", (event) => {



            const tableBody = document.querySelector('#categoriesTbody')




            tableBody.addEventListener("click", (event) => {



              if (event.target.classList.contains('editCategory')) {



                const idOftheParticularCategory1 = event.target.getAttribute('data-category-id')

                const tempCname = event.target.getAttribute('data-category-name')

                const tempCDescription = event.target.getAttribute('data-category-description')



                document.getElementById('changeCName').value = tempCname

                document.getElementById('changeCDescription').value = tempCDescription


                document.getElementById('saveChangesCategory').setAttribute('data-category-id', idOftheParticularCategory1)


              }


            })


            const saveChangesCategory = document.getElementById('saveChangesCategory')


            saveChangesCategory.addEventListener("click", () => {


              const idOftheParticularCategory2 = saveChangesCategory.getAttribute('data-category-id')

              const categoryName = document.getElementById('changeCName').value

              const categoryDescription = document.getElementById('changeCDescription').value


              fetch(`http://localhost:7000/admin/brandCategoryManagement/?categoryId=${idOftheParticularCategory2}&categoryName=${categoryName}&categoryDescription=${categoryDescription}`, {

                method: 'PUT',
                headers: {

                  'Content-Type': 'application/json'
                },

              }).then(response => {

                if (response.status != 200) {

                  throw new Error('Network response was not ok')
                }

                return response.json()

              }).then(data => {

                const categoryNameElement = document.getElementById(`displayChangedCname${idOftheParticularCategory2}`)


                categoryNameElement.textContent = categoryName;


                const categoryDescriptionElement = document.getElementById(`displayChangedCdescription${idOftheParticularCategory2}`)


                categoryDescriptionElement.textContent = categoryDescription



              }).catch(error => {

                console.log(`There is a problem with the fetch operation`, error)

              })
            })


          })



          //for editing brand

          document.addEventListener("DOMContentLoaded", (event) => {



            const tableBody = document.querySelector('#brandsTbody')




            tableBody.addEventListener("click", (event) => {



              if (event.target.classList.contains('editBrand')) {




                const idOftheParticularBrand1 = event.target.getAttribute('data-brand-id')

                const tempBname = event.target.getAttribute('data-brand-name')


                document.getElementById('changeBName').value = tempBname


                document.getElementById('saveChangesBrand').setAttribute('data-brand-id', idOftheParticularBrand1)

              }


            })


            const saveChangesBrand = document.getElementById('saveChangesBrand')


            saveChangesBrand.addEventListener("click", () => {


              const idOftheParticularBrand2 = saveChangesBrand.getAttribute('data-brand-id')

              const brandName = document.getElementById('changeBName').value


              fetch(`http://localhost:7000/admin/brandCategoryManagement/?brandId=${idOftheParticularBrand2}&brandName=${brandName}`, {

                method: 'PUT',
                headers: {

                  'Content-Type': 'application/json'
                },

              }).then(response => {

                if (response.status != 200) {

                  throw new Error('Network response was not ok')
                }

                return response.json()

              }).then(data => {

                const brandNameElement = document.getElementById(`displayChangedBname${idOftheParticularBrand2}`)


                brandNameElement.textContent = brandName


              }).catch(error => {

                console.log(`There is a problem with the fetch operation`, error)

              })
            })


          })




        </script>
        <%- include('../layouts/adminLayouts/footer') %>